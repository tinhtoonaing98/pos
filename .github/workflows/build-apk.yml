name: Build APK (self-contained)

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # ========== 1) Install deps (no lockfile required) ==========
      - name: Install dependencies
        run: |
          set -e
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm install --frozen-lockfile
          elif [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      # ========== 2) Build your web app (expects output in ./dist) ==========
      - name: Build web app
        run: |
          if npm run | grep -q " build"; then
            npm run build
          elif command -v yarn >/dev/null 2>&1; then
            yarn build
          elif command -v pnpm >/dev/null 2>&1; then
            pnpm build
          else
            echo "No build script found"; exit 1
          fi
          test -d dist || (echo "dist/ not found after build" && exit 1)

      # ========== 3) Scaffold a minimal Android WebView project in ./android ==========
      - name: Scaffold Android project
        run: |
          set -e
          APP_ID="com.htoomyat.app"
          APP_NAME="HtooMyat"
          mkdir -p android app_tmp
          cd android

          # settings.gradle.kts
          cat > settings.gradle.kts <<'EOF'
          rootProject.name = "HtooMyat"
          include(":app")
          EOF

          # gradle.properties
          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.nonTransitiveRClass=true
          EOF

          # Root build.gradle.kts
          cat > build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application") version "8.5.2" apply false
              kotlin("android") version "2.0.21" apply false
          }
          EOF

          mkdir -p app/src/main/java app/src/main/res/values app/src/main/res/xml \
                   app/src/main/assets/www
          # app/build.gradle.kts
          cat > app/build.gradle.kts <<'EOF'
          plugins {
              id("com.android.application")
              kotlin("android")
          }

          android {
              namespace = "com.htoomyat.app"
              compileSdk = 35

              defaultConfig {
                  applicationId = "com.htoomyat.app"
                  minSdk = 24
                  targetSdk = 35
                  versionCode = 1
                  versionName = "1.0"
              }

              buildTypes {
                  release {
                      isMinifyEnabled = false
                      proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                                    "proguard-rules.pro")
                  }
                  debug {
                      isMinifyEnabled = false
                  }
              }
              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }
              kotlinOptions {
                  jvmTarget = "17"
              }
              packaging {
                  resources.excludes += "META-INF/*"
              }
          }

          dependencies {
              implementation("androidx.core:core-ktx:1.13.1")
              implementation("androidx.appcompat:appcompat:1.7.0")
              implementation("com.google.android.material:material:1.12.0")
              implementation("androidx.activity:activity-ktx:1.9.3")
              implementation("androidx.constraintlayout:constraintlayout:2.2.0")
              implementation("androidx.webkit:webkit:1.11.0")
          }
          EOF

          # proguard
          echo "// no rules" > app/proguard-rules.pro

          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.htoomyat.app">

              <uses-permission android:name="android.permission.INTERNET"/>
              <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>

              <application
                  android:label="HtooMyat"
                  android:icon="@mipmap/ic_launcher"
                  android:usesCleartextTraffic="true"
                  android:networkSecurityConfig="@xml/network_security_config"
                  android:allowBackup="true"
                  android:supportsRtl="true"
                  android:theme="@style/Theme.AppCompat.Light.NoActionBar">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:configChanges="orientation|keyboardHidden|screenSize"
                      android:launchMode="singleTop">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          # network_security_config.xml
          cat > app/src/main/res/xml/network_security_config.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <network-security-config>
            <base-config cleartextTrafficPermitted="true" />
          </network-security-config>
          EOF

          # strings.xml
          cat > app/src/main/res/values/strings.xml <<'EOF'
          <resources>
            <string name="app_name">HtooMyat</string>
          </resources>
          EOF

          # MainActivity.kt
          mkdir -p app/src/main/java/com/htoomyat/app
          cat > app/src/main/java/com/htoomyat/app/MainActivity.kt <<'EOF'
          package com.htoomyat.app

          import android.annotation.SuppressLint
          import android.os.Bundle
          import android.webkit.WebChromeClient
          import android.webkit.WebSettings
          import android.webkit.WebView
          import android.webkit.WebViewClient
          import androidx.activity.ComponentActivity

          class MainActivity : ComponentActivity() {
              private lateinit var webView: WebView

              @SuppressLint("SetJavaScriptEnabled")
              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  webView = WebView(this)
                  setContentView(webView)

                  val ws: WebSettings = webView.settings
                  ws.javaScriptEnabled = true
                  ws.domStorageEnabled = true
                  ws.loadWithOverviewMode = true
                  ws.useWideViewPort = true
                  ws.allowFileAccess = true
                  ws.allowFileAccessFromFileURLs = true
                  ws.allowUniversalAccessFromFileURLs = true
                  ws.setSupportZoom(true)

                  webView.webViewClient = object : WebViewClient() {}
                  webView.webChromeClient = WebChromeClient()

                  webView.loadUrl("file:///android_asset/www/index.html")
              }

              override fun onBackPressed() {
                  if (this::webView.isInitialized && webView.canGoBack()) {
                      webView.goBack()
                  } else {
                      super.onBackPressed()
                  }
              }
          }
          EOF

      # ========== 4) Copy dist -> Android assets ==========
      - name: Copy web build into Android assets
        run: |
          rm -rf android/app/src/main/assets/www
          mkdir -p android/app/src/main/assets/www
          cp -r dist/* android/app/src/main/assets/www/

      # ========== 5) Build the APK ==========
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Gradle 8.7
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Build debug APK
        working-directory: android
        run: gradle assembleDebug --no-daemon --stacktrace

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
